READ THE REQUIREMENTS

Now you can skip the next three steps if you have an installed Debian
distribution and you are in a hurry for a demonstration, but you will miss
out on swim's more awesome capabilities. With that said..... 

FIRST GET SWIMRC PREPARED

Edit the swimrc configution file, you should read swimrc(5), but I'll ask
you some question right now.  You can find swimrc in /etc/swim, and in
your home directory in the subdirectory .swim.  Entries in the home
directory swimrc override ones in /etc/swim.

Are you using an installed Debian system?  If so, you almost definitely
have dpkg installed.  So uncomment this line in /etc/swim/swimrc by
removing the pound sign. 

$package_tool = "/usr/bin/dpkg";

otherwise

$package_tool = "/usr/bin/ar";

Do you have the apt package installed?  Configure this, or -xyz will not
work.

$apt = "yes";

Now you need to decide what architecture you would like to be swim's
default value when you download, build, and query the not-installed
databases.

What flavor, do you want alpha, arm, hurd-i386, i386, m68k, powerpc,
or sparc? (more coming :*)  I decided on .....

$architecture = "i386";

What kind of distribution do you want to be your default? stable,
unstable, frozen, or experimental (rare)  I like the ever changing ...

$distribution = "unstable";

Decide which sections you want?  You can have this

@user_defined_section = qw(main contrib non-free);

or this.

@user_defined_section = qw(main);

or .....
   

SECOND GET SWIMZ.LIST PREPARED

Now grab a copy of the README.mirrors from
http://www.debian.org/misc/README.mirrors, you will need this to set-up 
the configuration file /etc/swim/swimz.list.

If your using apt make sure to read swim(8) to get the nitty gritty on how
you can synchronize swim along with apt :*} using swimz.list.

Humm, you found a site which has the distribution you want, and you know
which section you want, and you are happy knowing about packages which can
install on the architecture you computer happens to have.

So what site is that?

deb ftp://ftp.swimz.org

What was the directory you happened to notice in the README.mirrors page?  

deb ftp://ftp.swimz.org/pub/debian

What distribution did you want?  Note: You won't want to use the Release
code name for the distribution, see swimz.list.

deb ftp://ftp.swimz.org/pub/debian unstable

What sections did you want?

deb ftp://ftp.swimz.org/pub/debian unstable main contrib non-free

Now put this line in the swimz.list, exactly like written, and ofcourse
use the values you want. 

THIRD GET THE DEBIAN DATABASE WITH FTP

Just issue this command.

swim --ftp --Contents DF --Packages DF

and wait a little bit.


FOURTH BUILD THE DATABASES

This is for a computer system with a Debian distribution installed.

swim --initdb

This next part applies to people who followed all the steps to get here,
and also read the important requirements at the top.  This makes the
not-installed databases.  Go take a walk, or a swim :*}

swim --initndb --Contents DF DF

When either of these commands are complete they will say "over and out".

NOW WHAT?

Now the real fun begins.  If you happen to have some experience with rpm
you already know some of the options which swim uses, but be prepared for
surpises.  swim(8) goes into more detail, the "Maximum RPM" book by
Edward C. Bailey which is freely available may provide help for swim's
--query option, but you will find that swim greatly diverges from rpm.

Try something like this, and do not use the -n unless you made the
not-installed databases, on the other hand, REMEMBER to use -n if you
do not have an installed system....

swim -n --search swim

now do this..

swim -qnSi or swim -hn

go to the directory /usr/bin and do

swim -qnf .

you probably will have to do

swim -qnft .

...the fun is just beginning...

Where are you swimming to today?


